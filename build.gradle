plugins {
  id("java")
  id("idea")
  id 'maven-publish'

  alias(libs.plugins.ebean)

  alias(libs.plugins.sonarLint)
  alias(libs.plugins.errorProne)
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://jitpack.io" }
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.compilerArgs.addAll(['-Xlint:all,-serial', '-parameters', '-g', '-Xmaxwarns', '999'])
  options.release.set(11) // javac --release 7..19+
  options.deprecation = true

  options.errorprone {
    enabled = true  // <<<!!! You can disable Error-Prone here!
    disableWarningsInGeneratedCode = true
    excludedPaths = ".*/build/gen.*/.*"
    disable("UnusedVariable")
    disable("MissingSummary")
    errorproneArgs = ["-XepExcludedPaths:.*/test/.*"]
  }
}

dependencies {
  errorprone("com.google.errorprone:error_prone_core:latest.release")
  annotationProcessor("io.ebean:querybean-generator:latest.release")

  implementation("io.ebean:ebean:latest.release")
  implementation libs.hikariCP

  compileOnly libs.micrometer.core

  //*** TEST TEST TEST

  testImplementation(platform libs.junit.bom)
  testImplementation libs.bundles.junit

  testImplementation libs.h2
  testImplementation("io.ebean:ebean-querybean:latest.release")

  testImplementation("io.ebean:ebean-test:latest.release")

  testImplementation libs.bundles.logback
}
// https://tomgregory.com/how-to-exclude-gradle-dependencies/
configurations.configureEach { // .implementation ?
  exclude group: 'io.ebean', module: 'ebean-datasource'
}

ebean {
  debugLevel = 9 //0 - 9
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
    showStandardStreams = true // show standard out & err of the test JVM on the console
    showExceptions = true
    exceptionFormat = 'full'
  }
  enableAssertions = true
  maxHeapSize = "500m"

  systemProperty("slf4j.detectLoggerNameMismatch", "true")
  systemProperty("file.encoding", "UTF-8")

  systemProperty("user.language", "en")
  Locale.setDefault(new Locale("en", "US"));
}
sonarLint {
  isGeneratedCodeIgnored = true
  ignoreFailures = true
}
// https://docs.gradle.org/current/userguide/publishing_maven.html
publishing {
  publications {
    maven(MavenPublication) {
      //groupId in gradle.properties;  artifactId == folder name
      from components.java
    }
  }
}
java {
  withSourcesJar()
  // withJavadocJar()
}
javadoc {
  options.encoding = 'UTF-8'
  options.addBooleanOption('html5', true)
}

tasks.withType(AbstractArchiveTask).configureEach {
  preserveFileTimestamps = false
  reproducibleFileOrder = true
}