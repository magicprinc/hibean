# https://git.platform-s.com/projects/DEV/repos/intellij-idea-settings/raw/catalog/libs.versions.toml?at=refs%2Fheads%2Fmaster
# https://git.platform-s.com/projects/DEV/repos/intellij-idea-settings/browse/catalog/libs.versions.toml
#
# https://git.platform-s.com/projects/COM/repos/common-data/browse/gradle/libs.versions.toml
#
# Sharing dependency versions between projects
# https://docs.gradle.org/current/userguide/platforms.html

# AI + IDEA + OpenRewrite!  https://habr.com/ru/companies/sberbank/articles/825368/

# version.ref="mssql"
# toolversion=libs.versions.checkstyle.get()
[versions]
jdk = "21"

groovy = "5.0.2"
spring = "6.+"
springBoot = "3.+"
jackson = "2.+"
mssql = "13.2.1.jre11"
eclipseCollections = "13.+"
ebeanVersion = "17.+!!"
slf4jVersion = "2.0.+!!"
micrometerVersion = "1.15.+!!" # –¥–µ–ª–∞—é—Ç RC –∏ –∏–Ω–æ–≥–¥–∞ –ª–æ–º–∞—é—Ç: —Ç—Ä–µ–±—É–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—è —á–µ–ª–æ–≤–µ–∫–æ–º
vaadinHillaVersion = "24.9.2"
finkSmsRouter = "2.21.2"

########################################################################################################################
# implementation libs.groovy.json
# version.ref="groovy" -OR- version={ strictly = "[3.8, 4.0[", prefer="3.9" } }
[libraries]

# https://jspecify.dev/docs/user-guide/ ‚ûï https://docs.spring.io/spring-framework/reference/7.0/core/null-safety.html
jspecify = { module = "org.jspecify:jspecify", version="latest.release" }

jetbrains-annotations = { module = "org.jetbrains:annotations", version="latest.release" }

# https://javadoc.io/doc/com.google.code.findbugs/jsr305/latest/index.html  ‚ö† jsr305 (dead) ‚Üí jsr308 BUT: jsr305 is more practical  E.g. @ParametersAreNonnullByDefault
# jsr305 = { module = "com.google.code.findbugs:jsr305", version="latest.release" }

# https://javadoc.io/doc/com.google.errorprone/error_prone_annotations/latest/index.html  E.g: @CanIgnoreReturnValue
errorprone = { module = "com.google.errorprone:error_prone_annotations", version="latest.release" }

# https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/latest/io/smallrye/common/annotation/package-summary.html  E.g. @Blocking,@NonBlocking,@RunOnVirtualThread
smallryeCommonAnnotation = { module = "io.smallrye.common:smallrye-common-annotation", version="latest.release" }

# E.g. javax.annotation.@PostConstruct
#javax-annotationApi   = { module = "javax.annotation:javax.annotation-api", version="1.+" }
jakarta-annotationApi = { module = "jakarta.annotation:jakarta.annotation-api", version="latest.release" }

# https://www.baeldung.com/javax-validation
#javax-validationApi   = { module = "javax.validation:validation-api", version="2.+" }
jakarta-validationApi = { module = "jakarta.validation:jakarta.validation-api", version="latest.release" }

#
jakarta-activationApi = { module = 'jakarta.activation:jakarta.activation-api', version="latest.release" }

########################################################################################################################

jdbc_mssql = { module = "com.microsoft.sqlserver:mssql-jdbc", version.ref="mssql" }
jdbc_postgresql = { module = "org.postgresql:postgresql", version="latest.release" }
jdbc_mySql = { module = "com.mysql:mysql-connector-j", version="latest.release" }
jdbc_h2 = { module = "com.h2database:h2", version="latest.release" } # ~2.2.224  Ignite ~ 1.4.197!!
jdbc_sqlite = { module = "org.xerial:sqlite-jdbc", version="latest.release" }
# https://duckdb.org/docs/stable/clients/java.html
jdbc_duckdb = { module = "org.duckdb:duckdb_jdbc", version="latest.release" }
rocksdb = { module = "org.rocksdb:rocksdbjni", version="10.2.+" } # 10.4.2 –±–µ–∑ dll üò±

groovyCore = { module = "org.apache.groovy:groovy", version.ref="groovy" }
#groovyTemplates = { module = "org.apache.groovy:groovy-templates", version.ref="groovy" }
groovyServlet = { module = "org.apache.groovy:groovy-servlet", version.ref="groovy" }
groovyJson = { module = "org.apache.groovy:groovy-json", version.ref="groovy" }
groovyXml = { module = "org.apache.groovy:groovy-xml", version.ref="groovy" }

mvel2 = { module = "org.mvel:mvel2", version="latest.release" }
freemarker = { module = "org.freemarker:freemarker", version="2.+" }

# https://github.com/anosim114/qute-spring-boot-starter ‚ûï https://quarkus.io/guides/qute-reference ‚ûï https://quarkus.io/guides/qute
qute-spring-boot-starter = { module = "com.github.magicprinc:qute-spring-boot-starter", version="latest.release" } # com.github.anosim114:qute-spring-boot-starter

guava = { module = "com.google.guava:guava", version="33.5.0-jre" }
# https://github.com/dynatrace-oss/hash4j ‚ûï https://www.dynatrace.com/news/blog/hash4j-new-library-java/
hash4j = { module = "com.dynatrace.hash4j:hash4j", version="latest.release" }

# https://www.bouncycastle.org/documentation/documentation-java/#documentation
# Provider, Utility Classes, CMS/EAC/OCSP/PKIX/PKCS/TSP, S/MIME, OpenPGP/BCPG, TLS, Core (lcrypto); Jasypt - Java Simplified Encryption
# Provider bcprov-lts8on https://downloads.bouncycastle.org/lts-java/docs/bcprov-lts8on-2.73.5-javadoc/
# CMS/EAC/OCSP/PKIX/PKCS/TSP bcpkix-lts8on https://downloads.bouncycastle.org/lts-java/docs/bcpkix-lts8on-2.73.5-javadoc/
# TLS bctls-lts8on https://downloads.bouncycastle.org/lts-java/docs/bctls-lts8on-2.73.5-javadoc/

bouncycastle-bcprov = { module = "org.bouncycastle:bcprov-lts8on", version="latest.release" }
bouncycastle-bcpkix = { module = "org.bouncycastle:bcpkix-lts8on", version="latest.release" }
bouncycastle-bctls  = { module = "org.bouncycastle:bctls-lts8on",  version="latest.release" }

# https://sslcontext-kickstart.com ‚ûï https://github.com/Hakky54/ayza?tab=readme-ov-file#netty ‚ûï https://github.com/Hakky54/java-tutorials/tree/main/instant-server-ssl-reloading-with-netty/netty-server
sslcontextKickstart = { module = "io.github.hakky54:ayza", version="latest.release" }
sslcontextKickstartPEM = { module = "io.github.hakky54:ayza-for-pem", version="latest.release" }
sslcontextKickstartNetty = { module = "io.github.hakky54:ayza-for-netty", version="latest.release" }

# https://github.com/RoaringBitmap/RoaringBitmap ‚ûï http://roaringbitmap.org/
roaringBitmap = { module = "com.github.RoaringBitmap:RoaringBitmap", version="latest.release" }
commonsLang3 = { module = "org.apache.commons:commons-lang3", version="latest.release" }
commonsCollections4 = { module = "org.apache.commons:commons-collections4", version="latest.release" } # prefer Guava, Spring, JCTools, FastUtil, eclipse-collections
apacheCommonsIo = { module = "commons-io:commons-io", version="latest.release" }
apacheCommonsCodec = { module = "commons-codec:commons-codec", version="latest.release" }
apacheCommonsFileUpload = { module = "commons-fileupload:commons-fileupload", version="latest.release" }
apacheCommonsText = { module = "org.apache.commons:commons-text", version="latest.release" }
apacheCommonsMath = { module = "org.apache.commons:commons-math3", version="latest.release" }
apacheCommonsValidator = { module = "commons-validator:commons-validator", version="latest.release" }
# https://github.com/wrandelshofer/FastDoubleParser ‚ûï https://cowtowncoder.medium.com/jackson-2-18-even-faster-floating-point-reads-another-20-2c162faf2dac
fastDoubleParser = { module = 'ch.randelshofer:fastdoubleparser', version="latest.release" }

caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version="3.+" }

slf4jApi = { module = "org.slf4j:slf4j-api", version.ref="slf4jVersion" }
slf4jJCL = { module = "org.slf4j:jcl-over-slf4j", version.ref="slf4jVersion" }
slf4jJUL = { module = "org.slf4j:jul-to-slf4j", version.ref="slf4jVersion" }
slf4jLog4j = { module = "org.slf4j:log4j-over-slf4j", version.ref="slf4jVersion" }

slf4jSimple = { module = "org.slf4j:slf4j-simple", version.ref="slf4jVersion" }

micrometerCore = { module = "io.micrometer:micrometer-core", version.ref="micrometerVersion" }
micrometerRegistryPrometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref="micrometerVersion" }


upgradeKafkaClients = { module = "org.apache.kafka:kafka-clients", version="3.6.+" }
upgradeSnappy = { module = "org.xerial.snappy:snappy-java", version="1.+" }
# https://github.com/luben/zstd-jni ‚ûï https://habr.com/ru/companies/1c/articles/680838/
upgradeZStd = { module = "com.github.luben:zstd-jni", version="latest.release" }
upgradeBrotli4j = { module = "com.aayushatharva.brotli4j:brotli4j", version="latest.release" } # https://github.com/hyperxpro/Brotli4j
natsCore = { module = "io.nats:jnats", version="latest.release" } # https://github.com/nats-io/nats.java
natsSpring = { module = "io.nats:nats-spring", version="latest.release" } # https://github.com/nats-io/spring-nats

# –º–æ–¥—É–ª–∏ Jackson —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏–π –Ω–µ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã ‚áí —Ñ–æ—Ä—Å–∏—Ä—É–µ–º –µ–¥–∏–Ω—É—é —Å–∞–º—É—é —Å–≤–µ–∂—É—é –≤–µ—Ä—Å–∏—é
jacksonCore = { module = "com.fasterxml.jackson.core:jackson-core", version.ref="jackson" }
jacksonDatabind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref="jackson" }
jacksonAnnotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref="jackson" }
jacksonDatatypeJsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref="jackson" }
jacksonDatatypeJdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref="jackson" }
jacksonModuleParameterNames = { module = "com.fasterxml.jackson.module:jackson-module-parameter-names", version.ref="jackson" }
jacksonModuleBlackbird = { module = "com.fasterxml.jackson.module:jackson-module-blackbird", version.ref="jackson" } #todo ~10% faster
jacksonClassmate = { module = "com.fasterxml:classmate", version="1.7.+" } # keep in sync with ^!

jacksonDataformatXml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref="jackson" }
#jacksonModuleJaxb = { module = "com.fasterxml.jackson.module:jackson-module-jaxb-annotations", version.ref="jackson" } # javax jaxb-api (OLD)
jacksonModuleJakartaJaxb = { module = 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations', version.ref="jackson" }
woodstoxXml = { module = "com.fasterxml.woodstox:woodstox-core", version="latest.release" }
jakarta-jaxbXmlBindApi = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version="latest.release" } # JAXB ‚Üí Jackson! √ó MOXy? javax.jaxb 2.2 for JDK 8
xom = { module = "xom:xom", version="1.3.+" }

jacksonDataformatYaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref="jackson" }
snakeYaml = { module = "org.yaml:snakeyaml", version="latest.release" } # Spring Boot —Ç—è–Ω–µ—Ç —Å—Ç–∞—Ä—ã–π 1.30
jacksonDataformatCbor = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor", version.ref="jackson" } # https://www.rfc-editor.org/rfc/rfc8949
# https://github.com/msgpack/msgpack-java/blob/main/msgpack-jackson/README.md
jacksonDataformatMsgPack = { module = "org.msgpack:jackson-dataformat-msgpack", version="latest.release" } # https://www.rfc-editor.org/rfc/rfc8949
# jacksonDataformatIon = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-ion", version.ref="jackson" }
# amazonIonJava = { module = "com.amazon.ion:ion-java", version="latest.release" }<^ - NICE, but slow and not widely spread
# jacksonDataformatToml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-toml", version.ref="jackson" } - nice, but text for humans: see yaml and hocon
jacksonDataformatSmile = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-smile", version.ref="jackson" } #√ó fast, but ONLY JAVA üò≠
# https://github.com/michel-kraemer/bson4jackson ‚Üí new ObjectMapper(new BsonFactory())  MongoDB https://en.wikipedia.org/wiki/BSON
# jacksonDataformatBSON = { module = "de.undercouch:bson4jackson", version.ref="jackson" } √ó nice, but mostly for mongodb


springCore = { module = "org.springframework:spring-core", version.ref="spring" }
springBeans = { module = "org.springframework:spring-beans", version.ref="spring" }
springContext = { module = "org.springframework:spring-context", version.ref="spring" }
springContextSupport = { module = "org.springframework:spring-context-support", version.ref="spring" }
springAOP = { module = "org.springframework:spring-aop", version.ref="spring" }
springExpression = { module = "org.springframework:spring-expression", version.ref="spring" }
springJdbc = { module = "org.springframework:spring-jdbc", version.ref="spring" }
springWeb = { module = "org.springframework:spring-web", version.ref="spring" }
springWebMvc = { module = "org.springframework:spring-webmvc", version.ref="spring" }
springTx = { module = "org.springframework:spring-tx", version.ref="spring" }

springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security", version.ref="springBoot" }
springSecurityCore = { module = "org.springframework.security:spring-security-core", version.ref="spring" }
springSecurityWeb = { module = "org.springframework.security:spring-security-web", version.ref="spring" }
springSecurityConfig = { module = "org.springframework.security:spring-security-config", version.ref="spring" }
springSecurityCrypto = { module = "org.springframework.security:spring-security-crypto", version.ref="spring" }
springSecurityOAuth2Jose = { module = "org.springframework.security:spring-security-oauth2-jose", version.ref="spring" }
# ? https://github.com/rocketbase-io/commons-auth ‚ûï https://vertx.io/docs/vertx-auth-common/java/

hikariCP = { module = "com.zaxxer:HikariCP", version="latest.release" }

# FastUtil —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Ç.—á. –æ—á–µ—Ä–µ–¥–∏: LongArrayFIFOQueue, LongHeapPriorityQueue
fastutil = { module = "it.unimi.dsi:fastutil", version="latest.release" }
# eclipse-collections ‚Üì, –Ω–æ —Ä–∞–∑–≤–∏—Ç–∏–µ –∑–∞—Ç–æ—Ä–º–æ–∑–∏–ª–æ—Å—å, bug —Å —É–¥–∞–ª–µ–Ω–∏–µ–º 0 key –∏–∑ int/long Maps
eclipseCollectionsApi = { module = "org.eclipse.collections:eclipse-collections-api", version.ref="eclipseCollections" }
eclipseCollections = { module = "org.eclipse.collections:eclipse-collections", version.ref="eclipseCollections" }
eclipseCollectionsFJ = { module = "org.eclipse.collections:eclipse-collections-forkjoin", version.ref="eclipseCollections" }
eclipseCollectionsTest = { module = "org.eclipse.collections:eclipse-collections-testutils", version.ref="eclipseCollections" }
# https://github.com/JCTools/JCTools ‚ûï https://www.baeldung.com/java-concurrency-jc-tools
jctools = { module = "org.jctools:jctools-core", version="4.+" }
# https://tech.trivago.com/post/2022-03-09-why-and-how-we-use-primitive-maps ‚ûï https://github.com/magicprinc/fastutil-concurrent-wrapper
fastutilConcurrentWrapper = { module = "com.github.magicprinc:fastutil-concurrent-wrapper", version="0.5.3" }

okHttpClient = { module = "com.squareup.okhttp3:okhttp", version="4.+" }
okhttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version="4.+" }
okhttpInterceptorBrotli = { module = "com.squareup.okhttp3:okhttp-brotli", version="4.+" }
okio = { module = "com.squareup.okio:okio", version="3.+" }

jsoup = { module = "org.jsoup:jsoup", version="1.+" } # jsoup HTML parser library @ https://jsoup.org/

#apacheHttpClient5 = { module = "org.apache.httpcomponents.client5:httpclient5", version="5.3.+" }

# https://jira.platform-s.com/browse/PLAT-3123 + https://netty.io/wiki/new-and-noteworthy-in-4.0.html + https://github.com/netty/netty/wiki/Netty-4.2-Migration-Guide + EXAMPLES
# https://www.mastertheboss.com/jboss-frameworks/netty/jboss-netty-tutorial/ + https://speakerdeck.com/sullis/netty-chicago-java-user-group-2024-04-17 + https://netty.io/wiki/user-guide-for-4.x.html
netty4 = { module = "io.netty:netty-all", version="4.2.7.Final" }

icu4j = { module = "com.ibm.icu:icu4j", version="latest.release" } # Full Unicode support. There IS a) an older version b) in *internal* packages in JDK

# –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–π –∏ –≤—Å–µ—è–¥–Ω—ã–π CsvReader/CsvWriter  https://github.com/osiegmar/FastCSV + https://fastcsv.org/
# H2 —Ç–æ–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–æ—â–Ω—ã–µ org.h2.tools.Csv,org.h2.tools.SimpleResultSet
fastCSV = { module = "de.siegmar:fastcsv", version="latest.release" }
# https://github.com/FasterXML/jackson-dataformats-text/tree/2.19/csv
jacksonDataformatCSV = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-csv", version.ref="jackson" }

# E-MAIL
# https://github.com/oblac/jodd-mail
# https://github.com/vert-x3/vertx-mail-client
# https://github.com/egulias/EmailValidator4J

# https://github.com/rocketbase-io/email-template-builder

# https://github.com/srikanth-lingala/zip4j SEE also org.jboss.shrinkwrap:shrinkwrap-impl-base:1.+
zip4j = { module = "net.lingala.zip4j:zip4j", version="latest.release" }
apache-commonsCompress = { module = "org.apache.commons:commons-compress", version="latest.release" } # bzip2, gzip, pack200, LZMA, XZ, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4, Brotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj

########################################################################################################################

logback = { module = "ch.qos.logback:logback-classic", version="latest.release" } # == Slf4j 1.7.+ & Spring Boot 2
logbackCore = { module = "ch.qos.logback:logback-core", version="latest.release" } # == Slf4j 1.7.+ & Spring Boot 2

#logbackGelfPaluch = { module = "biz.paluch.logging:logstash-gelf", version="latest.release" } # https://github.com/mp911de/logstash-gelf ‚ûï http://logging.paluch.biz/ ‚ûï https://github.com/mp911de/logstash-gelf-subsystem
logbackGelfSiegmar = { module = "de.siegmar:logback-gelf", version="latest.release" } # https://github.com/osiegmar/logback-gelf √ó com.github.magicprinc:logback-gelf

########################################################################################################################

springDataCommons = { module = "org.springframework.data:spring-data-commons", version.ref="springBoot" }

springBootStarterActuator= { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref="springBoot" }
springBootActuatorAutoconfigure= { module = "org.springframework.boot:spring-boot-actuator-autoconfigure", version.ref="springBoot" }
springBootAutoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref="springBoot" }
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref="springBoot" }
springBootStarterValidation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref="springBoot" }
springBootStarter = { module = "org.springframework.boot:spring-boot-starter", version.ref="springBoot" }

springBootStarterJdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref="springBoot" }
springBootStarterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref="springBoot" }

springBootAutoconfigureProcessor = { module = "org.springframework.boot:spring-boot-autoconfigure-processor", version.ref="springBoot" }

# IDEA –Ω–∞—É—á–∏–ª–∞—Å—å —Å–∞–º–∞?: compileOnly("org.springframework.boot:spring-boot-configuration-processor:2.+") + annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:2.+"
# + testImplementation("org.springframework.boot:spring-boot-configuration-processor:2.+") + testAnnotationProcessor("org.springframework.boot:spring-boot-configuration-processor:2.+")


# implementation('io.ebean:ebean-spring-txn:latest.release')// config = new DatabaseConfig(); config.setExternalTransactionManager(new SpringJdbcTransactionManager());
ebean-spring-txn = { module = "io.ebean:ebean-spring-txn", version.ref="ebeanVersion" }
ebean-hibean = { module = 'com.github.magicprinc:hibean', version="2.2" }
ebean-core = { module = "io.ebean:ebean", version.ref="ebeanVersion" }
ebean-avaje-config = { module = "io.avaje:avaje-config", version="latest.release" }
ebean-querybean = { module = "io.ebean:ebean-querybean", version.ref="ebeanVersion" }

ebean-ddl-generator = { module = "io.ebean:ebean-ddl-generator", version.ref="ebeanVersion" }

ebean-platform-sqlserver = { module = "io.ebean:ebean-platform-sqlserver", version.ref="ebeanVersion" }
ebean-platform-h2 = { module = "io.ebean:ebean-platform-h2", version.ref="ebeanVersion" }
ebean-platform-mysql = { module = "io.ebean:ebean-platform-mysql", version.ref="ebeanVersion" }
ebean-platform-postgres = { module = "io.ebean:ebean-platform-postgres", version.ref="ebeanVersion" }
ebean-platform-sqlite = { module = "io.ebean:ebean-platform-sqlite", version.ref="ebeanVersion" }

annotationProcessor-ebean-queryBeanGenerator = { module = "io.ebean:querybean-generator", version.ref="ebeanVersion" }
ebean-test = { module = "io.ebean:ebean-test", version.ref="ebeanVersion" }

mapStruct = { module = "org.mapstruct:mapstruct", version="latest.release" }
annotationProcessor-mapStruct = { module = "org.mapstruct:mapstruct-processor", version="latest.release" }
annotationProcessor-lombok = { module = "org.projectlombok:lombok", version="latest.release" }
annotationProcessor-mapStructLombokBinding = { module = "org.projectlombok:lombok-mapstruct-binding", version="latest.release" }

swaggerAnnotations = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version="latest.release" } # https://springdoc.org/migrating-from-springfox.html

########################################################################################################################

# https://smallrye.io/smallrye-config/Main/config/getting-started/
smallryeConfig = { module = "io.smallrye.config:smallrye-config-core", version="latest.release" }
smallryeConfigSourceYaml = { module = "io.smallrye.config:smallrye-config-source-yaml", version="latest.release" }
#smallryeConfigSourceHocon = { module = "io.smallrye.config:smallrye-config-source-hocon", version="latest.release" }
typesafeConfigHocon = { module = "com.typesafe:config", version="latest.release" }
# https://smallrye.io/smallrye-config/Main/config/secret-keys/
smallryeConfigCrypto = { module = "io.smallrye.config:smallrye-config-crypto", version="latest.release" }
smallryeConfigValidator = { module = "io.smallrye.config:smallrye-config-validator", version="latest.release" }
jbossLogging = { module = "org.jboss.logging:jboss-logging", version="latest.release!!" }

#todo SmallRye Fault Tolerance + Mutiny ? Vert.x CircuitBreaker ? Guava RateLimiter/commons-lang CircuitBreaker ? bucket4j

# https://jira.platform-s.com/browse/PLAT-1618 ‚Üí https://smallrye.io/docs/smallrye-fault-tolerance/6.2.6/ ‚ûï https://github.com/smallrye/smallrye-fault-tolerance
faultTolerance = { module = "io.smallrye:smallrye-fault-tolerance-standalone", version="latest.release" }
faultToleranceVertx = { module = "io.smallrye:smallrye-fault-tolerance-vertx", version="latest.release" }
# io.smallrye:smallrye-fault-tolerance-mutiny + org.reactivestreams:reactive-streams:1.+
# https://smallrye.io/smallrye-mutiny ‚ûï https://smallrye.io/smallrye-mutiny-vertx-bindings/ ‚ûï https://github.com/smallrye/smallrye-mutiny-vertx-bindings/tree/main/vertx-mutiny-clients ‚ûï io.smallrye.reactive:smallrye-mutiny-vertx-runtime:latest.release

# https://github.com/spring-projects/spring-plugin -vs- JDK ServiceLoader
spring-pluginCore = { module = "org.springframework.plugin:spring-plugin-core", version="latest.release" }
# https://avaje.io/spi/ + https://github.com/avaje/avaje-spi-service
avajeSPIService = { module = "io.avaje:avaje-spi-service", version = "latest.release" }
# https://pf4j.org/ ‚ûï https://github.com/pf4j/pf4j

# https://github.com/gliwka/hyperscan-java
regexHyperscan = { module = "com.gliwka.hyperscan:hyperscan", version="5.4.0-2.0.0" }
# https://dev.to/daniilroman/re2j-instead-of-default-regex-in-java-when-and-how-to-use-it-5bgn ‚ûï https://github.com/google/re2j
googleRE2j = { module = "com.google.re2j:re2j", version="latest.release" }

vaadinHillaStarter = {module = "com.vaadin:vaadin-spring-boot-starter", version.ref = "vaadinHillaVersion"}

########################################################################################################################
# compileOnly API

javax-ServletApi = { module = "com.github.devinotelecom:javax-jakarta-servlet-adapter", version="2.6" }
jakartaServletApi = { module = "jakarta.servlet:jakarta.servlet-api", version="6.1.+" }

########################################################################################################################
# *** TEST TEST TEST ***
junitJupiter = { module = "org.junit.jupiter:junit-jupiter", version="5.13.+" }
junitVintageEngine = { module = "org.junit.vintage:junit-vintage-engine", version="5.13.+" }
mockitoCore = { module = "org.mockito:mockito-core", version="latest.release" }
mockitoJunitJupiter = { module = "org.mockito:mockito-junit-jupiter", version="latest.release" }
# https://github.com/junit-pioneer/junit-pioneer ‚ûï https://junit-pioneer.org/ ‚ûï https://github.com/junit-team/junit5/discussions/2697
junitPioneer = { module = "org.junit-pioneer:junit-pioneer", version="latest.release" }
googleTruth = { module = "com.google.truth:truth", version="latest.release" }
# https://github.com/approvals/ApprovalTests.Java ‚ûï https://approvaltests.com/ ‚ûï https://github.com/junit-team/junit5/discussions/2697
approvalTests = { module = "com.approvaltests:approvaltests", version="24.+" } #todo watch approvaltests
springTest = { module = "org.springframework:spring-test", version.ref="spring" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test", version.ref="springBoot" }

# Awaitility ‚Üí Waiter + https://vmlens.com/  [i] JUnit5, Vert.x, Ignite, Mutiny, JDK21 VirtualThreads, vert.x-junit5
# v‚Üí ? https://github.com/lukas-krecan/JsonUnit
# todo https://github.com/cescoffier/loom-unit
jsonAssert = { module = "org.skyscreamer:jsonassert", version="latest.release" } # org.skyscreamer.jsonassert.JSONAssert.assertEquals

# https://github.com/lukas-krecan/JsonUnit ‚ûï https://mvnrepository.com/artifact/net.javacrumbs.json-unit/json-unit
jsonUnit = { module = "net.javacrumbs.json-unit:json-unit", version="latest.release" }

# (groovy json?, Jayway / vert.x JsonPath? qute) https://github.com/bazaarvoice/jolt ‚ûï https://docs.google.com/presentation/d/1sAiuiFC4Lzz4-064sg1p8EQt2ev0o442MfEbvrpD1ls
bazaarvoiceJolt = { module = "com.bazaarvoice.jolt:jolt-core", version="latest.release" }

okHttp-mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version="4.+" }

# https://github.com/instancio/instancio	‚ûï	https://github.com/instancio/instancio-quickstart
# https://www.instancio.org/getting-started/	‚ûï	https://www.instancio.org/	‚ûï	https://www.baeldung.com/java-test-data-instancio
testInstancio = { module = "org.instancio:instancio-junit", version="latest.release" }
testInstancioQuickCheck = { module = "org.instancio:instancio-quickcheck", version="latest.release" }

testEasyRandom = { module = "io.github.dvgaba:easy-random-core", version="latest.release" }
testEasyRandomValidation = { module = "io.github.dvgaba:easy-random-bean-validation", version="latest.release" }


# –µ—Å–ª–∏ –Ω–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ (sql) —Å–µ—Ä–≤–µ—Ä–∞, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TestContainers (—Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—É—â–µ–Ω–Ω—ã–π Docker)
testcontainers-mssqlserver = { module = "org.testcontainers:mssqlserver", version="latest.release" }
testcontainers-postgresql  = { module = "org.testcontainers:postgresql",  version="latest.release" }
# https://java.testcontainers.org/test_framework_integration/junit_5/
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version='latest.release' }

# Spring, Mockito? —Ç—è–Ω—É—Ç —Å—Ç–∞—Ä—ã–π ByteBuddy –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å JDK21. –°–≤–µ–∂–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–∞:
byteBuddy = { module = "net.bytebuddy:byte-buddy", version="latest.release" }
byteBuddyAgent = { module = "net.bytebuddy:byte-buddy-agent", version="latest.release" }

# https://www.baeldung.com/java-jqwik-property-based-testing + https://jqwik.net/ + https://blogs.oracle.com/javamagazine/post/know-for-sure-with-property-based-testing


########################################################################################################################
# implementation libs.bundles.groovy
[bundles]

coreAnnotation = ["errorprone","jakarta-annotationApi","jakarta-validationApi","jspecify","jetbrains-annotations"]

junit = [ # "hikariCP" boot –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –µ–≥–æ –∏ —Ç—Ä–µ–±—É–µ—Ç jdbc url –≤ –∫–æ–Ω—Ñ–∏–≥–µ
	"junitJupiter","mockitoCore","mockitoJunitJupiter", "googleTruth", "approvalTests", "junitPioneer",
  "springTest","springBootStarterTest",
	"eclipseCollectionsTest","jsonAssert",
	"okHttp-mockWebServer","okio","okHttpClient",
	"testEasyRandom", "testEasyRandomValidation", "testInstancio", # "testInstancioQuickCheck"
	"slf4jApi", "slf4jJCL", "slf4jJUL", "slf4jLog4j",
	"testcontainers-junit"
  ]
junitRuntime = [
	"junitVintageEngine", "logback","logbackCore", "byteBuddy","byteBuddyAgent"
  ]
jackson = ["jacksonCore","jacksonDatabind","jacksonAnnotations", "jacksonDatatypeJsr310","jacksonDatatypeJdk8","jacksonModuleParameterNames", "fastDoubleParser", "jacksonClassmate"]
json = 		["jacksonCore","jacksonDatabind","jacksonAnnotations", "jacksonDatatypeJsr310","jacksonDatatypeJdk8","jacksonModuleParameterNames", "fastDoubleParser", "jacksonClassmate",
		"jacksonDataformatXml", "jacksonModuleJakartaJaxb", "woodstoxXml", "jakarta-jaxbXmlBindApi", # "jacksonModuleJaxb"
		"jacksonDataformatYaml", "snakeYaml"
	]

eclipseCollections = ["eclipseCollectionsApi", "eclipseCollections", "eclipseCollectionsFJ"]

springMini = ["springCore","springContext","springJdbc"]

springSecurity = ["springSecurityCore","springSecurityWeb","springSecurityConfig"]

groovy = ["groovyCore", "groovyJson", "groovyXml"] # "groovyServlet" ‚Üí javax; groovyTemplates ‚Üí qute

smallryeConfig = ["smallryeConfig","smallryeConfigSourceYaml","snakeYaml","smallryeConfigValidator","jakarta-validationApi","jakarta-annotationApi","jbossLogging",
		"smallryeConfigCrypto", "typesafeConfigHocon"]

okHttp = ["okHttpClient","okhttpLoggingInterceptor","okio","okhttpInterceptorBrotli"]

slf4j = ["slf4jApi", "slf4jJCL", "slf4jJUL", "slf4jLog4j"]

upgradeBootApp = [ # "hikariCP" boot –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –µ–≥–æ –∏ —Ç—Ä–µ–±—É–µ—Ç jdbc url –≤ –∫–æ–Ω—Ñ–∏–≥–µ
	"errorprone","jakarta-annotationApi",
	"jacksonCore","jacksonDatabind","jacksonAnnotations", "jacksonDatatypeJsr310","jacksonDatatypeJdk8","jacksonModuleParameterNames", "fastDoubleParser",
	"woodstoxXml", "snakeYaml",
	"jakarta-validationApi", "swaggerAnnotations",
	"guava", "commonsLang3", "caffeine", # "slf4jApi", "slf4jJCL", "slf4jJUL", "slf4jLog4j",
	"micrometerCore", "micrometerRegistryPrometheus",
	"springCore","springContext","springJdbc", "springWeb","springBeans","springContextSupport","springTx","springWebMvc","springAOP","springExpression",
	"jbossLogging", "logbackCore","logback","logbackGelfSiegmar"
	]

coreUtilExt = [
	"icu4j", "fastutil", "hash4j", "fastutilConcurrentWrapper",
	"apacheCommonsIo", "apacheCommonsCodec",
	"faultTolerance","faultToleranceVertx"
]

########################################################################################################################
# alias(libs.plugins.versions)
[plugins]
lombok = { id = "io.freefair.lombok", version="latest.release" }

# https://errorprone.info ‚ûï https://github.com/tbroyer/gradle-errorprone-plugin#configuration ‚ûï https://errorprone.info/docs/flags
# https://github.com/PicnicSupermarket/error-prone-support ‚ûï https://error-prone.picnic.tech
errorprone = { id = "net.ltgt.errorprone", version="latest.release" }
# https://github.com/remal-gradle-plugins/sonarlint + https://lift.sonatype.com/ + https://github.com/SonarSource/sonar-java
sonarlint = { id ="name.remal.sonarlint", version="latest.release" }

versions = { id = "com.github.ben-manes.versions", version="latest.release" } # https://github.com/ben-manes/gradle-versions-plugin

spring-dependencyManagement = { id = "io.spring.dependency-management", version="latest.release" }
# –Ω–∞–º –Ω—É–∂–µ–Ω Spring Boot –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –Ω–æ –Ω–µ –Ω—É–∂–Ω—ã bootJar –∏ —Ç–¥ –∏ suffix -plain —É lib.jar
# https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#managing-dependencies.dependency-management-plugin.using-in-isolation
spring-boot = { id = "org.springframework.boot", version.ref="springBoot" } # Vaadin 23 doesn't work with Boot3

# alias(libs.plugins.spring.dependencyManagement)
# alias(libs.plugins.spring.boot).apply(false)
# ^ –Ω–∞–º –Ω—É–∂–µ–Ω Spring Boot –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –Ω–æ –Ω–µ –Ω—É–∂–Ω—ã bootJar –∏ —Ç–¥ –∏ suffix -plain —É lib.jar
# v https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#managing-dependencies.dependency-management-plugin.using-in-isolation
# dependencyManagement {
#   imports { mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES }
# }

ebean = { id = "io.ebean", version="latest.release" }

# https://github.com/palantir/gradle-git-version
gitVersion = { id = "com.palantir.git-version", version="latest.release" }

# https://github.com/n0mer/gradle-git-properties Produce build/resources/main/git.properties for spring-boot-actuator
gradleGitProperties = { id = "com.gorylenko.gradle-git-properties", version="latest.release" }

# https://github.com/Im-Fran/GradleDotEnv  ‚Üí  https://plugins.gradle.org/plugin/cl.franciscosolis.gradledotenv
dotEnv = { id = "cl.franciscosolis.gradledotenv", version="latest.release" }

# https://gretty-gradle-plugin.github.io/gretty-doc/index.html  ‚ûï  https://github.com/gretty-gradle-plugin/gretty/tree/gretty-3.x
grettyWebContainer = { id = "org.gretty", version="latest.release" }

# https://github.com/spotbugs/spotbugs + https://github.com/spotbugs/spotbugs-gradle-plugin
spotBugs = { id = "com.github.spotbugs", version="latest.release" }

# gradle jibBuildTar + docker load --input build/jib-image.tar
googleJIB = { id = 'com.google.cloud.tools.jib', version='latest.release' }

vaadinHilla = { id = "com.vaadin", version.ref = "vaadinHillaVersion" }

# https://github.com/gradlex-org/reproducible-builds
reproducible-builds = { id = "org.gradlex.reproducible-builds", version='latest.release' }